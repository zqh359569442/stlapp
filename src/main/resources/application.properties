

#DataSource
spring.datasource.url=jdbc:mysql://10.129.220.15:3314/test
spring.datasource.username:ytstl
spring.datasource.password:ytstl
# 使用druid数据源
spring.datasource.type: com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name: com.mysql.jdbc.Driver


#mybatis:
mybatis.mapper-locations: classpath:mapper/*.xml
mybatis.type-aliases-package: com.stlskyeye.stlapp.mapper

#thymeleaf start
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.prefix=classpath:/templates/html/
spring.thymeleaf.suffix=.html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
#thymeleaf end

#自动注入redis
#redis
#redis服务器IP
spring.redis.host=10.129.220.28
#redis数据库索引（默认为0）
spring.redis.database= 0
spring.redis.timeout=0
#redis服务器端口号
spring.redis.port=7240
#连接池最大连接数（负数表示没有限制）
spring.redis.pool.max-active=5
#连接池中的最大空闲连接数
spring.redis.pool.max-idle=5
#连接池中的最大阻塞等待时间（负数表示没有限制）
spring.redis.pool.max-wait=-1
#连接池中的最小空闲连接数
spring.redis.pool.min-idle=0


#自定义redis
#log redis 实现多redis处理
my.log.redis.host=10.129.220.28
my.log.redis.port=7616
#连接池最大连接数（负数表示没有限制）
my.log.redis.pool.max-active=5
#连接池中的最大空闲连接数
my.log.redis.pool.max-idle=5
#连接池中的最大阻塞等待时间（负数表示没有限制）
my.log.redis.pool.max-wait=-1
#连接池中的最小空闲连接数
my.log.redis.pool.min-idle=1
my.log.redis.password=



## Dubbo 服务提供者配置
## spring.dubbo.application.name=pri
## spring.dubbo.registry.address=zookeeper://10.129.220.54:2181
## spring.dubbo.protocol.name=dubbo
## spring.dubbo.protocol.port=20880
## spring.dubbo.scan=com.stlskyeye.stlapp.server.impl
